#--------------------------------------
# TO ADD
#--------------------------------------
# Reminder
Push 'Release' builds to github releases, not the 'Debug' builds
Update imgui.default

General:
 - ADD: Add format json support for the other MSB types.
 - ADD: Add articles covering all of the features and common use-cases in Smithbox
 
Viewport:
 - ADD: support for transparent shapes, so regions can be better visualized
 - ADD: support for billboard sprites, e.g. images that are rendered towards the camera but placed at a fixed point in the viewport space
 
World Map:
 - ADD: the dungeon icons, add icon radius for the non-open world maps
 - ADD: support for large/medium/small tile overlays
 
Behavior Editor:
 - ADD: behavior HKX editor
 - ADD: character HKX editor
 - ADD: skeleton HKX editor
 - ADD: collision HKX editor
 
EMEVD Editor:
 - ADD: Display EMEVD file as function list -> function commands -> command properties. 
 - ADD: Add ability to insert/delete/order commands. 
 - ADD: Add ability to adjust function arguments.
 - ADD: support for DS2 emevd (direct usefulness over DarkScript, plus simple enough for framework impl)
 - ADD: quicklink to EMEVD from param field
 
Map Editor: 
 - ADD: .BTAB support
 - ADD: .GRASS support
 - ADD: .ENTRYFILELIST support
 - ADD: enum support for the DS3 corpse poses
 - ADD: "Data Export" action for MSB data: output the MSB information as JSON
 - ADD: Add collision display for Assets: add secondary mesh alongside main Asset mesh, that holds the collision model.
 - ADD: global prop edit
 
 - FIX: DS2 Map Pieces aren't loaded/displayed.
 - FIX: duping assets to new map and then pressing X to bring to camera results in incorrect placement
 - FIX: asset browser entity change not properly changing Instance ID and Self Parts
 
Model Editor:  - ADD: FBX Import into loose FLVER
 - ADD: FBX Export of Loaded Model
 - ADD: skeleton and skinning support for playing animations
 - ADD: easier toggling of model masks based on associated NpcParam (for characters)
 - ADD: floating text for dummy poly ref IDs
 - ADD: floating text for co-ordinate direction (X, Y, Z)
 - ADD: dummy poly forward/upwards representation
 - ADD: proper handling for the flag fields in the FLVER
 - ADD: GX Item mapping so the byte arrays are more comprehesible (https://github.com/JKAnderson/SoulsFormats/issues/14)
 - ADD: render bone connections (use patrol route method)
 
 - FIX: viewport meshes should reflect changes to FLVER meshes (currently initial load meshes are always used)
 - FIX: property flag fields: they should be a set of checkboxes that resolve into the correct int value
 - FIX: dummy position needs to be offset by parent bone (currently this is ignored)
 - FIX: account for scale when displaying dummies/bones
 - FIX: FLVER save validation: report of radahn appearing broken on re-save, black hair occurs.

Material Editor
 - ADD: Implement Material/MATBIN editor

Param Editor:
 - ADD: stayparam support for DS3 (requires 'blob' editor with manual definitions)
 - ADD: Able to sort row order manually
 - ADD: make "Use project meta" merge in new entries instead of wholesale replacing (https://github.com/ividyon/WitchyBND/blob/main/WitchyBND/Configuration.cs)
 - ADD: automatic naming tool: for current param, look for reference fields, name the linked param row with the base name if empty (e.g. Item -> Bullet-> AtkParam)

Text Editor:
 - REWORK: remove the in-built categorization of the FMGs, add as an optional bundling, but internally they should reflect the actual FMG binder structure
 
 - ADD: FMG Generator script creation modal
 - ADD: FMG Generator open script folder (for project)
 - ADD: add modified filter
 - ADD: context menu in text input: add color (<font color="#31994d">Text</font>) that wraps selected text with the html tag (include detection/removal of tag when selecting existing one too)
 
 - FIX: internal vanilla entry should be preferred over internal dlc01/dlc02 entry due to FMG read preference (vanilla entry overrides dlc1 entry, dlc1 entry overrides dlc2 entry)
 
Gparam Editor:
 - ADD: json export/import of GPARAM (plus sub-classes?)
 - ADD: gparam reference support (e.g. jump to map param, and if it is offset, that value entry offset)
 - ADD: sticky selection: don't automatically clear selection, rather only clear it if it becomes invalid

Time Act Editor
 - ADD: TAE Mass Edit tool
 - ADD: handling for event groups (currently copied events simply inherit the existing assignment)
 - ADD: Data export/import for TAE/Animation/Event
 - ADD: event graph: use table API to represent each 0.05 frame, each cell is one frame
 - ADD: quicklink to TimeAct from param
 
 - FIX: TAE a330 + a331 in AC6 are not reading correctly
 - FIX: AC6 TAE doesn't save correctly (TAE implementation needs to be updated)
 - FIX: Template bank doesn't properly update on project switch

Texture Viewer: 
 - ADD: support for tpfbdt files 
 - ADD: support for 'custom' Shoebox Layouts for non-Shoebox Layout games. Smithbox will instead read from a Shoebox folder in .smithbox for these games.
 - ADD: ability to edit Shoebox Layouts (subwindow)
 - ADD: ability to inject new DDS file into existing binder (would need to move ROOT instances to MOD first)
 - ADD: ability to export selected icon 'section' of icon file (assuming texture has a shoebox layout)
 
 - FIX: Support AC6 Parts (need to change how ResourceManager holds the virtual paths since the AC6 uses the same filename but with different extensions)
 - FIX: Image Preview fails for users when they edit an icon image file and save it incorrectly (as BC3 and not BC7)
 
#--------------------------------------
# Notes
#--------------------------------------
